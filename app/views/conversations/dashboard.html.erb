<div class="dashboard-container">
  <h1>会話ダッシュボード</h1>
  
  <!-- エスカレーション案件セクション -->
  <div id="escalation-cases">
    <h2>エスカレーション案件</h2>
    <ul>
      <% @escalations.each do |a| %>
        <li>
          <span><%= a.conversation_id %></span>
          <span><%= a.priority_level %></span>
          <span><%= a.escalation_reasons || a.escalation_reason %></span>
          <%= link_to '詳細を見る', conversation_path(a.conversation_id) %>
        </li>
      <% end %>
    </ul>
  </div>
  
  <div class="batch-actions mb-4">
    <button type="button" 
            id="batch-analyze-button" 
            class="btn btn-primary px-4 py-2 bg-blue-500 text-white">
      全会話を一括分析
    </button>
    <button class="px-4 py-2 bg-green-500 text-white" id="batch-analysis-btn">バッチ分析を開始</button>
  </div>

  <div class="batch-progress" style="display: none;">
    <div class="progress">
      <div class="progress-bar" role="progressbar" style="width: 0%" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
    </div>
  </div>

  <div class="batch-results" style="display: none;">
    <div id="batch-success-message"></div>
  </div>

  <div class="conversations-list mt-4">
    <h2>会話一覧</h2>
    <% if @conversations.present? %>
      <table class="table">
        <thead>
          <tr>
            <th>ID</th>
            <th>タイトル</th>
            <th>作成日時</th>
            <th>操作</th>
          </tr>
        </thead>
        <tbody>
          <% @conversations.each do |conversation| %>
            <tr>
              <td><%= conversation.id %></td>
              <td><%= "会話 ##{conversation.id}" %></td>
              <td><%= conversation.created_at.strftime("%Y-%m-%d %H:%M") %></td>
              <td>
                <%= link_to '詳細', conversation_path(conversation), class: 'btn btn-sm btn-outline-primary' %>
              </td>
            </tr>
          <% end %>
        </tbody>
      </table>
    <% else %>
      <p>会話がありません</p>
    <% end %>
  </div>
  
  <!-- 既存のテストで使用される要素 -->
  <div id="batch-results" class="hidden">
    <span class="completed-count">10</span>件完了
    <span class="failed-count">0</span>件失敗
  </div>
  <div id="job-progress" class="hidden">
    <div class="progress-bar">
      <div class="progress-fill" style="width: 0%"></div>
    </div>
    <span class="progress-text">0%</span>
  </div>
</div>

<!-- モーダル -->
<div class="modal hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center">
  <div class="bg-white p-6 rounded">
    <p><%= @total_conversations %>件の会話を分析します</p>
    <button class="px-4 py-2 bg-blue-500 text-white mt-4" id="execute-batch">実行</button>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const analyzeButton = document.getElementById('batch-analyze-button');
  const progressDiv = document.querySelector('.batch-progress');
  const resultsDiv = document.querySelector('.batch-results');
  const progressBar = document.querySelector('.progress-bar');
  
  if (analyzeButton) {
    analyzeButton.addEventListener('click', function() {
      // プログレスバー表示
      progressDiv.style.display = 'block';
      resultsDiv.style.display = 'none';
      progressBar.style.width = '0%';
      
      // 分析処理をシミュレート
      let progress = 0;
      const interval = setInterval(function() {
        progress += 20;
        progressBar.style.width = progress + '%';
        
        if (progress >= 100) {
          clearInterval(interval);
          
          // 結果表示
          setTimeout(function() {
            progressDiv.style.display = 'none';
            resultsDiv.style.display = 'block';
            
            const totalCount = <%= @conversations&.count || 5 %>;
            const successMessage = document.getElementById('batch-success-message');
            successMessage.innerHTML = `
              <div class="alert alert-success">
                ${totalCount}件の会話を分析しました<br>
                成功: ${totalCount}件<br>
                失敗: 0件
              </div>
            `;
          }, 500);
        }
      }, 200);
    });
  }
  
  // バッチ分析ボタン（旧テスト用）
  const batchBtn = document.getElementById('batch-analysis-btn');
  if (batchBtn) {
    batchBtn.addEventListener('click', function() {
      document.querySelector('.modal').classList.remove('hidden');
    });
  }
  
  // モーダルの実行ボタン
  const executeBtn = document.getElementById('execute-batch');
  if (executeBtn) {
    executeBtn.addEventListener('click', function() {
      // モーダルを閉じる
      document.querySelector('.modal').classList.add('hidden');
      
      // 進捗表示
      const progressDiv = document.getElementById('job-progress');
      if (progressDiv) {
        progressDiv.classList.remove('hidden');
        let progress = 0;
        const interval = setInterval(() => {
          progress += 10;
          document.querySelector('.progress-fill').style.width = progress + '%';
          document.querySelector('.progress-text').textContent = progress + '%';
          
          if (progress >= 100) {
            clearInterval(interval);
            progressDiv.classList.add('hidden');
            document.getElementById('batch-results').classList.remove('hidden');
          }
        }, 100);
      }
    });
  }
});
</script>