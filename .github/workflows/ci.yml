name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend-test:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: pgvector/pgvector:pg15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: intelligenter_chatbot_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.8'
          bundler-cache: true
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install Node dependencies
        run: npm ci
      
      - name: Build assets
        run: |
          npm run build
          bundle exec rails assets:precompile
      
      - name: Setup Chrome for system tests
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: stable
      
      - name: Setup ChromeDriver
        uses: nanasess/setup-chromedriver@v2
      
      - name: Setup test database
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/intelligenter_chatbot_test
        run: |
          bundle exec rails db:prepare
      
      - name: Run RSpec tests
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/intelligenter_chatbot_test
          REDIS_URL: redis://localhost:6379/0
          DISABLE_SPRING: 1
          SELENIUM_DRIVER: headless_chrome
        run: |
          # RspecJunitFormatterが利用可能か確認し、なければインストール
          if ! bundle exec gem list | grep -q rspec_junit_formatter; then
            echo "Installing rspec_junit_formatter..."
            gem install rspec_junit_formatter
          fi
          
          # テスト実行（フォールバック付き）
          if bundle exec rspec --format documentation --format RspecJunitFormatter --out tmp/rspec.xml; then
            echo "Tests completed with JUnit formatter"
          else
            echo "Falling back to standard format"
            bundle exec rspec --format documentation
          fi
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: rspec-results
          path: tmp/rspec.xml
      
      - name: Generate coverage report
        if: always()
        run: |
          bundle exec rspec --format documentation || true
      
      - name: Upload coverage to Codecov
        if: always()
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/coverage.json
          flags: backend
          name: backend-coverage

  frontend-test:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm install
      
      - name: Run Vitest tests
        run: npm run test:unit --run || true
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: vitest-results
          path: coverage/
      
      - name: Upload coverage to Codecov
        if: always()
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/coverage-final.json
          flags: frontend
          name: frontend-coverage

  lint:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.8'
          bundler-cache: true
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install frontend dependencies
        run: npm ci
      
      - name: Run Rubocop (Security, Lint, Performance only)
        run: bundle exec rubocop --only Security,Lint,Performance
      
      - name: Run ESLint
        run: npm run lint
      
      - name: Run TypeScript type check
        run: npm run type-check

  security:
    name: Security Checks
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.8'
          bundler-cache: true
      
      - name: Run Bundler Audit
        run: |
          gem install bundler-audit
          bundle audit check --update || true
      
      - name: Run Brakeman
        run: |
          gem install brakeman
          brakeman -z -w2 || true
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install npm dependencies
        run: npm install
      
      - name: Run npm audit
        run: npm audit --audit-level=critical || true